# version: '3.8'

# services:
#   zookeeper:
#     image: confluentinc/cp-zookeeper:7.0.1
#     ports:
#       - "2181:2181"

#   kafka:
#     image: confluentinc/cp-kafka:7.0.1
#     ports:
#       - "9092:9092"
#     environment:
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092

#   ai-service:
#     build: ./ai-service
#     ports:
#       - "5000:5000"
#     depends_on:
#       - kafka

#   streaming-service:
#     build: ./streaming-service
#     depends_on:
#       - kafka
#       - ai-service

#   frontend:
#     build: ./frontend
#     ports:
#       - "3000:3000"

#   blockchain-node:
#     image: hyperledger/fabric-peer:2.3
#     ports:
#       - "7051:7051"



version: '3.8'

services:
  kafka:
    image: apache/kafka:3.8.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  ai-service:
    build: ./ai-service
    ports:
      - "5000:5000"
    depends_on:
      - kafka

  streaming-service:
    build: ./streaming-service
    depends_on:
      - kafka
      - ai-service

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"

  blockchain-node:
    image: hyperledger/fabric-peer:2.3
    ports:
      - "7051:7051"
